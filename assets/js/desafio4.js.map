{"version":3,"file":"desafio4.js","sourceRoot":"./src/**/*.ts/","sources":["desafio4.ts"],"names":[],"mappings":"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","sourcesContent":["/* Um desenvolvedor tentou criar um projeto que consome a base de dados de filme do TMDB para criar um organizador de filmes, mas desistiu \r\n* pois considerou o seu código inviável. Você consegue usar typescript para organizar esse código e a partir daí aprimorar o que foi feito?\r\n\r\n* A ideia dessa atividade é criar um aplicativo que: \r\n*    - Busca filmes\r\n*    - Apresenta uma lista com os resultados pesquisados\r\n*    - Permite a criação de listas de filmes e a posterior adição de filmes nela\r\n\r\n* Todas as requisições necessárias para as atividades acima já estão prontas, mas a implementação delas ficou pela metade (não vou dar tudo de graça).\r\n* Atenção para o listener do botão login-button que devolve o sessionID do usuário\r\n* É necessário fazer um cadastro no https://www.themoviedb.org/ e seguir a documentação do site para entender como gera uma API key https://developers.themoviedb.org/3/getting-started/introduction\r\n\r\nvar apiKey = '3f301be7381a03ad8d352314dcc3ec1d';\r\nlet apiKey;\r\nlet requestToken;\r\nlet username;\r\nlet password;\r\nlet sessionId;\r\nlet listId = '7101979';\r\n\r\nlet loginButton = document.getElementById('login-button');\r\nlet searchButton = document.getElementById('search-button');\r\nlet searchContainer = document.getElementById('search-container');\r\n\r\nloginButton.addEventListener('click', async () => {\r\n  await criarRequestToken();\r\n  await logar();\r\n  await criarSessao();\r\n})\r\n\r\nsearchButton.addEventListener('click', async () => {\r\n  let lista = document.getElementById(\"lista\");\r\n  if (lista) {\r\n    lista.outerHTML = \"\";\r\n  }\r\n  let query = document.getElementById('search').value;\r\n  let listaDeFilmes = await procurarFilme(query);\r\n  let ul = document.createElement('ul');\r\n  ul.id = \"lista\"\r\n  for (const item of listaDeFilmes.results) {\r\n    let li = document.createElement('li');\r\n    li.appendChild(document.createTextNode(item.original_title))\r\n    ul.appendChild(li)\r\n  }\r\n  console.log(listaDeFilmes);\r\n  searchContainer.appendChild(ul);\r\n})\r\n\r\nfunction preencherSenha() {\r\n  password = document.getElementById('senha').value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction preencherLogin() {\r\n  username =  document.getElementById('login').value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction preencherApi() {\r\n  apiKey = document.getElementById('api-key').value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction validateLoginButton() {\r\n  if (password && username && apiKey) {\r\n    loginButton.disabled = false;\r\n  } else {\r\n    loginButton.disabled = true;\r\n  }\r\n}\r\n\r\nclass HttpClient {\r\n  static async get({url, method, body = null}) {\r\n    return new Promise((resolve, reject) => {\r\n      let request = new XMLHttpRequest();\r\n      request.open(method, url, true);\r\n\r\n      request.onload = () => {\r\n        if (request.status >= 200 && request.status < 300) {\r\n          resolve(JSON.parse(request.responseText));\r\n        } else {\r\n          reject({\r\n            status: request.status,\r\n            statusText: request.statusText\r\n          })\r\n        }\r\n      }\r\n      request.onerror = () => {\r\n        reject({\r\n          status: request.status,\r\n          statusText: request.statusText\r\n        })\r\n      }\r\n\r\n      if (body) {\r\n        request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        body = JSON.stringify(body);\r\n      }\r\n      request.send(body);\r\n    })\r\n  }\r\n}\r\n\r\nasync function procurarFilme(query) {\r\n  query = encodeURI(query)\r\n  console.log(query)\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`,\r\n    method: \"GET\"\r\n  })\r\n  return result\r\n}\r\n\r\nasync function adicionarFilme(filmeId) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/movie/${filmeId}?api_key=${apiKey}&language=en-US`,\r\n    method: \"GET\"\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function criarRequestToken () {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/token/new?api_key=${apiKey}`,\r\n    method: \"GET\"\r\n  })\r\n  requestToken = result.request_token\r\n}\r\n\r\nasync function logar() {\r\n  await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=${apiKey}`,\r\n    method: \"POST\",\r\n    body: {\r\n      username: `${username}`,\r\n      password: `${password}`,\r\n      request_token: `${requestToken}`\r\n    }\r\n  })\r\n}\r\n\r\nasync function criarSessao() {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/session/new?api_key=${apiKey}&request_token=${requestToken}`,\r\n    method: \"GET\"\r\n  })\r\n  sessionId = result.session_id;\r\n}\r\n\r\nasync function criarLista(nomeDaLista, descricao) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list?api_key=${apiKey}&session_id=${sessionId}`,\r\n    method: \"POST\",\r\n    body: {\r\n      name: nomeDaLista,\r\n      description: descricao,\r\n      language: \"pt-br\"\r\n    }\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function adicionarFilmeNaLista(filmeId, listaId) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list/${listaId}/add_item?api_key=${apiKey}&session_id=${sessionId}`,\r\n    method: \"POST\",\r\n    body: {\r\n      media_id: filmeId\r\n    }\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function pegarLista() {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list/${listId}?api_key=${apiKey}`,\r\n    method: \"GET\"\r\n  })\r\n  console.log(result);\r\n}\r\n\r\n{/* <div style=\"display: flex;\">\r\n  <div style=\"display: flex; width: 300px; height: 100px; justify-content: space-between; flex-direction: column;\">\r\n      <input id=\"login\" placeholder=\"Login\" onchange=\"preencherLogin(event)\">\r\n      <input id=\"senha\" placeholder=\"Senha\" type=\"password\" onchange=\"preencherSenha(event)\">\r\n      <input id=\"api-key\" placeholder=\"Api Key\" onchange=\"preencherApi()\">\r\n      <button id=\"login-button\" disabled>Login</button>\r\n  </div>\r\n  <div id=\"search-container\" style=\"margin-left: 20px\">\r\n      <input id=\"search\" placeholder=\"Escreva...\">\r\n      <button id=\"search-button\">Pesquisar Filme</button>\r\n  </div>\r\n</div>}*/\r\n\r\n// Resolução - Ta de sacanagem comigo, 01. Não consegui fazer, sinto muito, vou entregar com o que eu consegui\r\nlet apiKey = '3f301be7381a03ad8d352314dcc3ec1d';\r\nlet requestToken: string;\r\nlet username: string;\r\nlet password:string;\r\nlet sessionId: string;\r\nlet listId = '7101979';\r\n\r\nlet loginButton = document.getElementById('login-button') as HTMLButtonElement;\r\nlet searchButton = document.getElementById('search-button') as HTMLButtonElement;\r\nlet searchContainer = document.getElementById('search-container') as HTMLButtonElement;\r\n\r\nlet search = document.getElementById('search') as HTMLInputElement;\r\nlet passwordInput = document.getElementById('senha') as HTMLInputElement;\r\nlet usernameInput = document.getElementById('login') as HTMLInputElement;\r\nlet apiKeyInput = document.getElementById('api-key') as HTMLInputElement;\r\n\r\nloginButton?.addEventListener('click', async () => {\r\n  await criarRequestToken();\r\n  await logar();\r\n  await criarSessao();\r\n})\r\n\r\nsearchButton?.addEventListener('click', async () => {\r\n  let lista = document.getElementById(\"lista\");\r\n  if (lista) {\r\n    lista.outerHTML = \"\";\r\n  }\r\n  let query = search.value;\r\n  let listaDeFilmes = await procurarFilme(query);\r\n  let ul = document.createElement('ul');\r\n  ul.id = \"lista\"\r\n  for (const item of listaDeFilmes.results) {\r\n    let li = document.createElement('li');\r\n    li.appendChild(document.createTextNode(item.original_title))\r\n    ul.appendChild(li)\r\n  }\r\n  console.log(listaDeFilmes);\r\n  searchContainer?.appendChild(ul);\r\n})\r\n\r\nfunction preencherSenha() {\r\n  password = passwordInput.value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction preencherLogin() {\r\n  username =  usernameInput.value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction preencherApi() {\r\n  apiKey = apiKeyInput.value;\r\n  validateLoginButton();\r\n}\r\n\r\nfunction validateLoginButton() {\r\n  if (password && username && apiKey) {\r\n    loginButton.disabled = false;\r\n  } else {\r\n    loginButton.disabled = true;\r\n  }\r\n}\r\n\r\nclass HttpClient {\r\n  static async get({url, method, body = null}) {\r\n    return new Promise((resolve, reject) => {\r\n      let request = new XMLHttpRequest();\r\n      request.open(method, url, true);\r\n\r\n      request.onload = () => {\r\n        if (request.status >= 200 && request.status < 300) {\r\n          resolve(JSON.parse(request.responseText));\r\n        } else {\r\n          reject({\r\n            status: request.status,\r\n            statusText: request.statusText\r\n          })\r\n        }\r\n      }\r\n      request.onerror = () => {\r\n        reject({\r\n          status: request.status,\r\n          statusText: request.statusText\r\n        })\r\n      }\r\n\r\n      if (body) {\r\n        request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        body = JSON.stringify(body);\r\n      }\r\n      request.send(body);\r\n    })\r\n  }\r\n}\r\n\r\nasync function procurarFilme<T>(query: string) {\r\n  query = encodeURI(query)\r\n  console.log(query)\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`,\r\n    method: \"GET\"\r\n  })\r\n  return result\r\n}\r\n\r\nasync function adicionarFilme(filmeId: number) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/movie/${filmeId}?api_key=${apiKey}&language=en-US`,\r\n    method: \"GET\"\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function criarRequestToken () {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/token/new?api_key=${apiKey}`,\r\n    method: \"GET\"\r\n  })\r\n  requestToken = result.request_token\r\n}\r\n\r\nasync function logar() {\r\n  await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=${apiKey}`,\r\n    method: \"POST\",\r\n    body: {\r\n      username: `${username}`,\r\n      password: `${password}`,\r\n      request_token: `${requestToken}`\r\n    }\r\n  })\r\n}\r\n\r\nasync function criarSessao() {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/authentication/session/new?api_key=${apiKey}&request_token=${requestToken}`,\r\n    method: \"GET\"\r\n  })\r\n  sessionId = result.session_id;\r\n}\r\n\r\nasync function criarLista(nomeDaLista, descricao) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list?api_key=${apiKey}&session_id=${sessionId}`,\r\n    method: \"POST\",\r\n    body: {\r\n      name: nomeDaLista,\r\n      description: descricao,\r\n      language: \"pt-br\"\r\n    }\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function adicionarFilmeNaLista(filmeId, listaId) {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list/${listaId}/add_item?api_key=${apiKey}&session_id=${sessionId}`,\r\n    method: \"POST\",\r\n    body: {\r\n      media_id: filmeId\r\n    }\r\n  })\r\n  console.log(result);\r\n}\r\n\r\nasync function pegarLista() {\r\n  let result = await HttpClient.get({\r\n    url: `https://api.themoviedb.org/3/list/${listId}?api_key=${apiKey}`,\r\n    method: \"GET\"\r\n  })\r\n  console.log(result);\r\n}\r\n\r\n{/* <div style=\"display: flex;\">\r\n  <div style=\"display: flex; width: 300px; height: 100px; justify-content: space-between; flex-direction: column;\">\r\n      <input id=\"login\" placeholder=\"Login\" onchange=\"preencherLogin(event)\">\r\n      <input id=\"senha\" placeholder=\"Senha\" type=\"password\" onchange=\"preencherSenha(event)\">\r\n      <input id=\"api-key\" placeholder=\"Api Key\" onchange=\"preencherApi()\">\r\n      <button id=\"login-button\" disabled>Login</button>\r\n  </div>\r\n  <div id=\"search-container\" style=\"margin-left: 20px\">\r\n      <input id=\"search\" placeholder=\"Escreva...\">\r\n      <button id=\"search-button\">Pesquisar Filme</button>\r\n  </div>\r\n</div>*/}"]}